using System;
using System.Collections.Generic;

// Інтерфейс або абстрактний клас для графіка
public interface IGraph
{
    void Draw();
}

// Конкретний клас лінійного графіка
public class LineGraph : IGraph
{
    private List<double> data;

    public LineGraph(List<double> data)
    {
        this.data = data;
    }

    public void Draw()
    {
        Console.WriteLine("Drawing Line Graph...");
        // Логіка для відображення лінійного графіка
    }
}

// Конкретний клас стовпчикового графіка
public class BarGraph : IGraph
{
    private List<double> data;

    public BarGraph(List<double> data)
    {
        this.data = data;
    }

    public void Draw()
    {
        Console.WriteLine("Drawing Bar Graph...");
        // Логіка для відображення стовпчикового графіка
    }
}

// Конкретний клас кругової діаграми
public class PieChart : IGraph
{
    private List<double> data;

    public PieChart(List<double> data)
    {
        this.data = data;
    }

    public void Draw()
    {
        Console.WriteLine("Drawing Pie Chart...");
        // Логіка для відображення кругової діаграми
    }
}

// Фабрика графіків
public class GraphFactory
{
    public IGraph CreateGraph(string graphType, List<double> data)
    {
        switch (graphType.ToLower())
        {
            case "line":
                return new LineGraph(data);
            case "bar":
                return new BarGraph(data);
            case "pie":
                return new PieChart(data);
            default:
                throw new ArgumentException("Invalid graph type");
        }
    }
}

class Program
{
    static void Main()
    {
        // Введення типу графіка та даних через консоль
        Console.Write("Enter graph type (line/bar/pie): ");
        string graphType = Console.ReadLine();

        Console.Write("Enter data (comma-separated values): ");
        string inputData = Console.ReadLine();

        List<double> data = new List<double>();
        foreach (var value in inputData.Split(','))
        {
            if (double.TryParse(value, out double result))
            {
                data.Add(result);
            }
            else
            {
                Console.WriteLine("Invalid input. Please enter numeric values.");
                return;
            }
        }

        // Створення та візуалізація графіка
        GraphFactory graphFactory = new GraphFactory();
        IGraph graph = graphFactory.CreateGraph(graphType, data);
        graph.Draw();
    }
}
